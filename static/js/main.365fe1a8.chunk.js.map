{"version":3,"sources":["bmicalculator/Bmicalculator.js","App.js","serviceWorker.js","index.js"],"names":["BootstrapButton","withStyles","root","boxShadow","textTransform","fontSize","padding","border","lineHeight","backgroundColor","borderColor","fontFamily","join","Button","Bmicalculator","state","height","weight","error","calculate","setState","result","Math","round","toFixed","co","res","Swal","fire","icon","title","parameter","e","target","id","value","classes","this","props","md","xs","className","AppBar","position","color","Toolbar","Typography","style","Grid","container","item","Card","margin","CardContent","paddingTop","spacing","TextField","text","type","onChange","label","justifyContent","display","alignItems","FormHelperText","variant","fullWidth","disableRipple","onClick","Component","theme","flexGrow","button","each","width","eachac","eacheq","textAlign","textbox","marginLeft","marginRight","App","history","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.365fe1a8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Swal from 'sweetalert2';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  button: {\r\n    backgroundColor: '#bbb'\r\n  },\r\n  each: {\r\n    width: '25%',\r\n    height: '60px',\r\n    fontSize: '35px',\r\n    backgroundColor: 'blue',\r\n    color: 'white'\r\n  },\r\n  eachac: {\r\n    width: '25%',\r\n    height: '60px',\r\n    fontSize: '35px',\r\n    backgroundColor: 'pink',\r\n    color: 'black'\r\n  },\r\n  eacheq: {\r\n    width: '25%',\r\n    height: '60px',\r\n    fontSize: '35px',\r\n    backgroundColor: 'pink',\r\n    color: 'black'\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: 'center',\r\n    fontSize:\"25px\"\r\n  },\r\n  textbox: {\r\n    height: '60px',\r\n    backgroundColor: '#bbb',\r\n    width: '100%',\r\n    fontSize:'25px',\r\n    textAlign : 'right'\r\n  },\r\n  text: {\r\n    width: '100%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    color: 'white',\r\n    lineHeight:'5px'\r\n  },\r\n});\r\n\r\n\r\nconst BootstrapButton = withStyles({\r\n  root: {\r\n    boxShadow: 'none',\r\n    textTransform: 'none',\r\n    fontSize: 16,\r\n    padding: '6px 12px',\r\n    border: '1px solid',\r\n    lineHeight: 1.5,\r\n    backgroundColor: '#007bff',\r\n    borderColor: '#007bff',\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:hover': {\r\n      backgroundColor: '#0069d9',\r\n      borderColor: '#0062cc',\r\n      boxShadow: 'none',\r\n    },\r\n    '&:active': {\r\n      boxShadow: 'none',\r\n      backgroundColor: '#0062cc',\r\n      borderColor: '#005cbf',\r\n    },\r\n    '&:focus': {\r\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.5)',\r\n    },\r\n  },\r\n})(Button);\r\n\r\nclass Bmicalculator extends Component {\r\n  state = {\r\n    height:'',\r\n    weight:'',\r\n    error:false\r\n  }\r\n calculate=()=>{\r\n   if(this.state.weight===\"\" || this.state.height===\"\"){\r\nthis.setState({\r\n  error:true\r\n})\r\n   }\r\n   else{\r\n    this.setState({\r\n      error:false\r\n    })   \r\n  var result=Math.round((this.state.weight)/((this.state.height/100)*(this.state.height/100))).toFixed(2);\r\n  var co=\"\";var res=0;\r\n  if(result<18.5){\r\n     co=result+\"\\n You are Underweight\";\r\n     res=1;\r\n  }\r\n     else if(result>=18.5 && result<24.9)\r\n{\r\n  co=result+\"\\n You are Normal\";\r\n  res=2;\r\n}\r\n  else if(result>=25.0 && result<29.9)\r\n {    co=result+\"\\n You are Overweight\";\r\n res=3;\r\n} \r\n else if(result>=30)\r\n {    co=result+\"\\n You are very Overweight\";\r\n res=4;\r\n} \r\n if(res===1 || res===3 || res===4){\r\n     Swal.fire({\r\n       icon:\"warning\",\r\n      title:co\r\n     })\r\n    }\r\n    else if(res===2){\r\n      Swal.fire({\r\n        icon:\"success\",\r\n       title:co\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nparameter=(e)=>{\r\n  this.setState({\r\n    [e.target.id]: e.target.value\r\n  });\r\n}\r\n// password=(e)=>{\r\n//   this.setState({\r\n//     pass: e.target.value\r\n//   });\r\n// }\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div md={12} xs={12}>\r\n        <div className={classes.root}>\r\n          <AppBar position=\"fixed\" color=\"secondary\">\r\n            <Toolbar>\r\n              <Typography className={classes.title}>\r\n                BMI CALCULATOR\r\n                            </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <div style={{ padding: \"20px\" }}>\r\n          <Grid container>\r\n            <Grid item md={3} />\r\n            <Grid item md={6} xs={12}>\r\n              <Card style={{\r\n                margin: \"auto\",\r\n                boxShadow: \"0px 0px 5px 5px rgba(0,0,0,0.3)\",\r\n                \"&:hover\": {\r\n                  boxShadow: \"0 16px 30px 12.125px rgba(0,0,0,0.3)\"\r\n                },\r\n                backgroundColor:\"rgba(255, 255, 255, 1.0)\"\r\n              }}>\r\n                <CardContent>\r\n                  <div style={{paddingTop:\"5px\"}}></div>\r\n                <Grid container spacing={3} >\r\n                <Grid item md={3} />\r\n                      <Grid item md={6} xs={12}>\r\n                <TextField\r\n                          className={classes.text} type=\"number\" id=\"weight\" value={this.state.weight} onChange={e => this.parameter(e)} label=\"Weight (kg)\" />\r\n                  </Grid>\r\n                  </Grid>\r\n                  <Grid item md={3} />\r\n                  <Grid container spacing={3} >\r\n                <Grid item md={3} />\r\n                      <Grid item md={6} xs={12}>\r\n                <TextField\r\n                          className={classes.text} type=\"number\" id=\"height\" value={this.state.height} onChange={e => this.parameter(e)} label=\"Height (cms)\" />\r\n                  </Grid>\r\n                  </Grid>\r\n                  <Grid item md={3} />\r\n                  { this.state.error===true ?\r\n                    <div style={{justifyContent:\"center\",display:\"flex\",alignItems:\"center\", paddingTop:'20px'}}><FormHelperText style={{color:'red',fontSize:\"15px\"}}>Enter the details</FormHelperText>\r\n                       </div>:\r\n                       null\r\n                    } \r\n                    <br />\r\n                  <Grid container spacing={3} >\r\n                <Grid item md={4} xs={3} />\r\n                      <Grid item md={4} xs={6}>\r\n                  <BootstrapButton variant=\"contained\" color=\"primary\" fullWidth disableRipple\r\n                                className={classes.margin}\r\n                                onClick={()=>this.calculate()}\r\n                                >\r\n                                Calculate\r\n                              </BootstrapButton>\r\n                              </Grid>\r\n                  </Grid>\r\n                  <Grid item md={4} xs={3} />\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n            <Grid item md={3} />\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Bmicalculator);\r\n","import React,{Component} from 'react';\nimport Bmicalculator from './bmicalculator/Bmicalculator';\nimport {HashRouter as Router,Switch,Route} from 'react-router-dom';\nimport { createBrowserHistory as history} from 'history';\n\nclass App extends Component {\n  render(){\n  return (\n    <Router history={history }>\n    <div>\n    <Switch>\n<Route path=\"/\" exact component={Bmicalculator}/>\n</Switch>\n</div>\n</Router>\n  );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}